from datetime import datetime

from pyrogram import filters
from pyrogram.types import (
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    CallbackQuery,
    Message,
)

from Innexia import pbot as pgram, OWNER_ID, OWNER_USERNAME, SUPPORT_CHAT
from Innexia.utils.errors import capture_err


def content(msg: Message) -> [None, str]:
    text_to_return = msg.text

    if msg.text is None:
        return None
    if " " not in text_to_return:
        return None
    try:
        return msg.text.split(None, 1)[1]
    except IndexError:
        return None


@pgram.on_message(filters.command("bug"))
@capture_err
async def bug(_, msg: Message):
    if msg.chat.username:
        chat_username = (f"@{msg.chat.username} / `{msg.chat.id}`")
    else:
        chat_username = (f"Private Group / `{msg.chat.id}`")

    bugs = content(msg)
    user_id = msg.from_user.id
    mention = (
        f"[{msg.from_user.first_name}](tg://user?id={str(msg.from_user.id)}"
        + ")"
    )

    datetimes_fmt = "%d-%m-%Y"
    datetimes = datetime.utcnow().strftime(datetimes_fmt)

    bug_report = f"""
**#BUG : ** **@{OWNER_USERNAME}**
**“ì Ä·¥è·¥ç ·¥ús·¥á Ä : ** **{mention}**
**·¥ús·¥á Ä …™·¥Ö : ** **{user_id}**
**…¢ Ä·¥è·¥ú·¥ò : ** **{chat_username}**
** ô·¥ú…¢  Ä·¥á·¥ò·¥è Ä·¥õ : ** **{bugs}**
**·¥á·¥†·¥á…¥·¥õ s·¥õ·¥Ä·¥ç·¥ò : ** **{datetimes}**"""


    if msg.chat.type == "private":
        await msg.reply_text(" üö´ <b>·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö ·¥è…¥ ü è ·¥°·¥è Ä·¥ãs …™…¥ …¢ Ä·¥è·¥ú·¥òs.</b>")
        return

    if user_id == OWNER_ID:
        if bugs:
            await msg.reply_text(
                "üö´ <b> ú·¥è·¥° ·¥Ñ·¥Ä…¥  ô·¥á ·¥è·¥°…¥·¥á Ä  ô·¥è·¥õ  Ä·¥á·¥ò·¥è Ä·¥õ…™…¥…¢  ô·¥ú…¢??</b>",
            )
            return
        await msg.reply_text(
            "·¥è·¥°…¥·¥á Ä …¥·¥è·¥è ô  ú·¥Ä…™!"
        )
    elif bugs:
        await msg.reply_text(
            f"<b> ô·¥ú…¢  Ä·¥á·¥ò·¥è Ä·¥õ : {bugs}</b>\n\n"
            "‚úÖ <b>·¥õ ú·¥á  ô·¥ú…¢ ·¥°·¥Äs s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è  Ä·¥á·¥ò·¥è Ä·¥õ·¥á·¥Ö ·¥õ·¥è ·¥õ ú·¥á s·¥ú·¥ò·¥ò·¥è Ä·¥õ …¢ Ä·¥è·¥ú·¥ò!</b>",
            reply_markup=InlineKeyboardMarkup(
                [[InlineKeyboardButton("C ü·¥ès·¥á ", callback_data="close_reply")]]
            ),
        )

        thumb = "https://te.legra.ph/file/c1c3ff192dce27b35d5fb.png"

        await pgram.send_photo(
            SUPPORT_CHAT,
            photo=thumb,
            caption=f"{bug_report}",
            reply_markup=InlineKeyboardMarkup(
                [
                    [
                        InlineKeyboardButton(
                            "‚û° V…™·¥á·¥° B·¥ú…¢", url=f"{msg.link}")
                    ],
                    [
                        InlineKeyboardButton(
                            "‚ùå C ü·¥ès·¥á", callback_data="close_send_photo")
                    ]
                ]
            )
        )
    else:
        await msg.reply_text("‚ùé <b>…¥·¥è  ô·¥ú…¢ ·¥õ·¥è  Ä·¥á·¥ò·¥è Ä·¥õ “ì·¥è·¥ú…¥·¥Ö ·¥õ…™ ü ü …¥·¥è·¥°!</b>")


@pgram.on_callback_query(filters.regex("close_reply"))
async def close_reply(msg, CallbackQuery):
    await CallbackQuery.message.delete()

@pgram.on_callback_query(filters.regex("close_send_photo"))
async def close_send_photo(_, CallbackQuery):
    is_Admin = await pgram.get_chat_member(
        CallbackQuery.message.chat.id, CallbackQuery.from_user.id
    )
    if not is_Admin.can_delete_messages:
        return await CallbackQuery.answer(
            " è·¥è·¥ú' Ä·¥á …¥·¥è·¥õ ·¥Ä ü ü·¥è·¥°·¥á·¥Ö ·¥õ·¥è ·¥Ñ ü·¥ès·¥á ·¥õ ú…™s.", show_alert=True
        )
    await CallbackQuery.message.delete()


__mod_name__ = "Bug"
